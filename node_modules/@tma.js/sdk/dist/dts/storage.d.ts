import type { HeaderColorKey } from './bridge/methods/methods.js';
import type { RGB } from './colors/types.js';
/**
 * Describes storage keys and according values.
 */
interface StorageParams {
    'back-button': {
        isVisible: boolean;
    };
    'closing-behavior': {
        isConfirmationNeeded: boolean;
    };
    'main-button': {
        backgroundColor: RGB;
        isEnabled: boolean;
        isLoaderVisible: boolean;
        isVisible: boolean;
        text: string;
        textColor: RGB;
    };
    'settings-button': {
        isVisible: boolean;
    };
    viewport: {
        height: number;
        isExpanded: boolean;
        stableHeight: number;
        width: number;
    };
    'mini-app': {
        backgroundColor: RGB;
        headerColor: HeaderColorKey | RGB;
    };
}
/**
 * Key which could be used to store data in storage.
 */
type StorageKey = keyof StorageParams;
/**
 * Saves value in sessionStorage.
 * @param key - storage key.
 * @param value - storage value.
 */
export declare function saveStorageValue<K extends StorageKey>(key: K, value: StorageParams[K]): void;
/**
 * Extracts value from the sessionStorage.
 * @param key - storage key.
 */
export declare function getStorageValue<K extends StorageKey>(key: K): StorageParams[K] | null;
export {};
