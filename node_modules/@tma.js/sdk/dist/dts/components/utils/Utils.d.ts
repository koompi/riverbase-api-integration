import type { PostEvent } from '../../bridge/methods/postEvent.js';
import type { SupportsFunc } from '../../supports/types.js';
import type { CreateRequestIdFunc } from '../../types/request-id.js';
import type { Version } from '../../version/types.js';
/**
 * Provides common Mini Apps functionality not covered by other system components.
 */
export declare class Utils {
    private readonly version;
    private readonly createRequestId;
    private readonly postEvent;
    constructor(version: Version, createRequestId: CreateRequestIdFunc, postEvent?: PostEvent);
    /**
     * Opens a link in an external browser. The Mini App will not be closed.
     *
     * Note that this method can be called only in response to the user
     * interaction with the Mini App interface (e.g. click inside the Mini App
     * or on the main button).
     * @param url - URL to be opened.
     * @param tryInstantView
     */
    openLink(url: string, tryInstantView?: boolean): void;
    /**
     * Opens a Telegram link inside Telegram app. The Mini App will be closed. It expects passing
     * link in full format, with hostname "t.me".
     * @param url - URL to be opened.
     * @throws {Error} URL has not allowed hostname.
     */
    openTelegramLink(url: string): void;
    /**
     * Reads text from clipboard and returns string or null. null is returned
     * in cases:
     * - Value in clipboard is not text
     * - Access to clipboard is not allowed
     */
    readTextFromClipboard(): Promise<string | null>;
    /**
     * Checks if specified method is supported by current component.
     */
    supports: SupportsFunc<'readTextFromClipboard'>;
    /**
     * Checks if specified method parameter is supported by current component.
     */
    supportsParam: SupportsFunc<'openLink.tryInstantView'>;
}
