import type { ClosingBehaviorEvents } from './types.js';
import type { PostEvent } from '../../bridge/methods/postEvent.js';
import { EventEmitter } from '../../event-emitter/EventEmitter.js';
type Emitter = EventEmitter<ClosingBehaviorEvents>;
/**
 * Component responsible for controlling current closing confirmation
 * status.
 */
export declare class ClosingBehavior {
    private readonly postEvent;
    private readonly ee;
    private readonly state;
    constructor(isConfirmationNeeded: boolean, postEvent?: PostEvent);
    private set isConfirmationNeeded(value);
    /**
     * Returns true, if the confirmation dialog enabled while the user is trying
     * to close the Mini App.
     */
    get isConfirmationNeeded(): boolean;
    /**
     * Disables the confirmation dialog while the user is trying to close the
     * Mini App.
     */
    disableConfirmation(): void;
    /**
     * Enables the confirmation dialog while the user is trying to close the
     * Mini App.
     */
    enableConfirmation(): void;
    /**
     * Adds new event listener.
     */
    on: Emitter['on'];
    /**
     * Removes event listener.
     */
    off: Emitter['off'];
}
export {};
