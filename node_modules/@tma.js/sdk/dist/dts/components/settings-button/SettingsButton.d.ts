import type { SettingsButtonEvents } from './types.js';
import type { PostEvent } from '../../bridge/methods/postEvent.js';
import { EventEmitter } from '../../event-emitter/EventEmitter.js';
import type { SupportsFunc } from '../../supports/types.js';
import type { Version } from '../../version/types.js';
type Emitter = EventEmitter<SettingsButtonEvents>;
export declare class SettingsButton {
    private readonly postEvent;
    private readonly ee;
    private readonly state;
    constructor(isVisible: boolean, version: Version, postEvent?: PostEvent);
    private set isVisible(value);
    /**
     * True if SettingsButton is currently visible.
     */
    get isVisible(): boolean;
    /**
     * Hides the SettingsButton.
     */
    hide(): void;
    /**
     * Adds event listener.
     * @param event - event name.
     * @param listener - event listener.
     */
    on: Emitter['on'];
    /**
     * Removes event listener.
     * @param event - event name.
     * @param listener - event listener.
     */
    off: Emitter['off'];
    /**
     * Shows the SettingsButton.
     */
    show(): void;
    /**
     * Checks if specified method is supported by current component.
     */
    supports: SupportsFunc<'show' | 'hide'>;
}
export {};
